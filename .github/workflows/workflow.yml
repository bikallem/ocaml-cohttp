name: Main workflow

on:
  workflow_dispatch:
  pull_request:
  push:
  schedule:
    # Prime the caches every Monday
    - cron: 0 1 * * MON

jobs:
  build-test-ubuntu:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        ocaml-compiler:
          - ocaml-variants.4.08.1+afl
          - ocaml-variants.4.09.1+afl
          - ocaml-variants.4.10.1+afl
          - ocaml-variants.4.11.2+afl
          - ocaml-variants.4.12.1+options,ocaml-option-afl
          - ocaml-variants.4.13.1+options,ocaml-option-afl
          - ocaml-variants.4.14.0+options,ocaml-option-afl

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: true
          opam-depext: true
          opam-depext-flags: --with-test

      - run: yarn --frozen-lockfile
        working-directory: cohttp-lwt-jsoo/test

      - run: opam install . --deps-only --with-test

      - run: opam exec -- make build

      - run: opam exec -- make test

      - run: opam exec -- make js-test

  build-test-macos:
    strategy:
      fail-fast: false
      matrix:
        os:
          - macos-latest
        ocaml-compiler:
          - 4.14.x

    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Use OCaml ${{ matrix.ocaml-compiler }}
        uses: ocaml/setup-ocaml@v2
        with:
          ocaml-compiler: ${{ matrix.ocaml-compiler }}
          dune-cache: false
          opam-depext: true
          opam-depext-flags: --with-test

      - run: echo "PKG_CONFIG_PATH=$(brew --prefix openssl)/lib/pkgconfig" >>"$GITHUB_ENV"

      - run: opam install --with-test --deps-only http cohttp cohttp-lwt cohttp-lwt-unix cohttp-server-lwt-unix cohttp-mirage cohttp-async cohttp-curl-async cohttp-curl-lwt cohttp-curl cohttp-top

      - run: |
          opam exec -- dune build --profile=dev --only-packages http,cohttp,cohttp-lwt,cohttp-lwt-unix,cohttp-server-lwt-unix,cohttp-mirage,cohttp-async,cohttp-curl-async,cohttp-curl-lwt,cohttp-curl,cohttp-top @install
          opam exec -- dune build -j1 bench/ examples/ cohttp-curl-async/bin/ cohttp-curl-lwt/bin/

      - run: opam exec -- dune runtest --profile=dev cohttp cohttp-async cohttp-curl cohttp-curl-async cohttp-curl-lwt cohttp-lwt cohttp-lwt-unix cohttp-mirage cohttp-server-lwt-unix cohttp-top http

